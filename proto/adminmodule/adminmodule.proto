syntax = "proto3";
package cosmos.adminmodule.adminmodule;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";

option go_package = "github.com/cosmos/admin-module/x/adminmodule/types";
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) = false;
option (gogoproto.goproto_getters_all) = false;

// TextProposal defines a standard text proposal whose changes need to be
// manually updated in case of approval.
message TextProposal {
  option (cosmos_proto.implements_interface) = "Content";

  option (gogoproto.equal) = true;

  string title = 1;
  string description = 2;
}

// Proposal defines the core field members of a governance proposal.
message Proposal {
  option (gogoproto.equal) = true;

  uint64              proposal_id = 1 [(gogoproto.jsontag) = "id", (gogoproto.moretags) = "yaml:\"id\""];
  google.protobuf.Any content = 2 [(cosmos_proto.accepts_interface) = "Content"];
  google.protobuf.Timestamp submit_time = 3
  [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"submit_time\""];
}
