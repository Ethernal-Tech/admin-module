syntax = "proto3";
package cosmos.adminmodule.adminmodule;

import "google/api/annotations.proto";
import "adminmodule/adminmodule.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/cosmos/admin-module/x/adminmodule/types";

// Query defines the gRPC querier service.
service Query {
  // this line is used by starport scaffolding # 2

  // Queries a list of admins items.
  rpc Admins(QueryAdminsRequest) returns (QueryAdminsResponse) {
    option (google.api.http).get = "/cosmos/adminmodule/adminmodule/admins";
  }

  // Queries a list of archived proposals.
  rpc ArchivedProposals(QueryArchivedProposalsRequest) returns (QueryArchivedProposalsResponse) {
    option (google.api.http).get = "/cosmos/adminmodule/adminmodule/archivedproposals";
  }

}

// this line is used by starport scaffolding # 3
message QueryAdminsRequest {
}

message QueryAdminsResponse {
  repeated string admins = 1;
}

message QueryArchivedProposalsRequest {
}

message QueryArchivedProposalsResponse {
  repeated Proposal proposals = 1;
}

// ProposalStatus enumerates the valid statuses of a proposal.
//enum ProposalStatus {
//  option (gogoproto.goproto_enum_prefix) = false;
//
//  // PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.
//  PROPOSAL_STATUS_UNSPECIFIED = 0 [(gogoproto.enumvalue_customname) = "StatusNil"];
//  // PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
//  // period.
//  PROPOSAL_STATUS_DEPOSIT_PERIOD = 1 [(gogoproto.enumvalue_customname) = "StatusDepositPeriod"];
//  // PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
//  // period.
//  PROPOSAL_STATUS_VOTING_PERIOD = 2 [(gogoproto.enumvalue_customname) = "StatusVotingPeriod"];
//  // PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
//  // passed.
//  PROPOSAL_STATUS_PASSED = 3 [(gogoproto.enumvalue_customname) = "StatusPassed"];
//  // PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
//  // been rejected.
//  PROPOSAL_STATUS_REJECTED = 4 [(gogoproto.enumvalue_customname) = "StatusRejected"];
//  // PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
//  // failed.
//  PROPOSAL_STATUS_FAILED = 5 [(gogoproto.enumvalue_customname) = "StatusFailed"];
//}
//
//// TallyResult defines a standard tally for a governance proposal.
//message TallyResult {
//  option (gogoproto.equal) = true;
//
//  string yes = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
//  string abstain = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
//  string no = 3 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
//  string no_with_veto = 4 [
//    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
//    (gogoproto.nullable) = false,
//    (gogoproto.moretags) = "yaml:\"no_with_veto\""
//  ];
//}